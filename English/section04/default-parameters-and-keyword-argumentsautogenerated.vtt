WEBVTT

00:00.480 --> 00:05.610
In the previous videos I showed you how to define a function with parameters.

00:05.610 --> 00:15.980
Now the way I've shown you this and these parameters is what we call positional parameters or we might

00:15.980 --> 00:22.940
want to call them positional arguments and they're called positional arguments because the position

00:23.180 --> 00:24.830
matters right.

00:24.890 --> 00:36.080
If I change our arguments to let's say Andre as the second argument and if I click Run you see that

00:36.080 --> 00:44.990
I get Hello smiley face andre which maybe is not what we wanted to do positional arguments are arguments

00:44.990 --> 00:47.720
that require to be in the proper position.

00:47.750 --> 00:54.770
So if we defined name here first and then emoji Second you have to make sure that the first argument

00:54.920 --> 00:58.330
will be the name and the second argument will be the emotion.

01:00.550 --> 01:11.230
However there is something called key word arguments and keyword arguments allow us to.

01:11.230 --> 01:13.190
Well now worry about the position.

01:13.390 --> 01:14.260
What do I mean.

01:14.260 --> 01:17.050
Well I can do something like this.

01:17.140 --> 01:25.120
I can say say hello and in here give it a keyword and a value.

01:25.120 --> 01:39.370
So I'm going to say emoji equals to let's say the smiley face and then comma name equals to Bebe.

01:39.380 --> 01:43.390
Now if I run this you'll see that I get.

01:43.580 --> 01:49.710
Hello Bebe because I was able to use keyword arguments.

01:49.710 --> 01:59.290
I tell it explicitly hey I want the emoji to be this and name to be this so positional arguments these

01:59.290 --> 02:01.610
matter but keyword arguments.

02:01.750 --> 02:03.160
It doesn't.

02:03.160 --> 02:10.780
Now I argue that this is bad practice because you're making the code more complicated than it needs

02:10.780 --> 02:11.950
to be.

02:11.950 --> 02:20.260
If the definition of the function is to give name an emoji you should follow that practice and not confuse

02:20.290 --> 02:28.360
other developers then just stick to that name and emoji so you can still use keyword arguments but make

02:28.360 --> 02:36.020
sure that they are in order because why wouldn't you just follow what the function tells you.

02:36.190 --> 02:44.530
It's the same result but at least this way you are following Well the standard flow and by the way these

02:44.530 --> 02:52.560
keyword arguments can sometimes be confused we what we call default parameters.

02:52.750 --> 02:57.130
I know it can get really really confusing but this is something that will come naturally to you after

02:57.130 --> 02:58.660
you practice a little bit.

02:58.660 --> 03:06.830
So I'm going to just comment this out and show you how default parameters work default parameters.

03:08.050 --> 03:15.100
Allow us to give right in here as we're defining the function what we want as default in this.

03:15.100 --> 03:27.300
In our case let's say Darth Vader is the default name and the IMO g will be this little angry Darth

03:27.300 --> 03:27.900
Vader.

03:28.020 --> 03:34.010
While it doesn't really look like Darth Vader but this is the emoji that we gonna use.

03:34.010 --> 03:36.260
So what does this do.

03:36.260 --> 03:40.790
Well if I run my program everything works the same.

03:40.930 --> 03:47.010
If I do keyword arguments and run my program nothing changes.

03:47.150 --> 03:48.290
Let's make this a little bit bigger.

03:49.640 --> 03:55.290
However default parameters allow us to do something interesting.

03:55.310 --> 04:06.540
For example if I run a another function say hello but I forget to give it parameters or arguments in

04:06.540 --> 04:07.500
our case.

04:07.560 --> 04:12.090
Well if I run this I get.

04:12.120 --> 04:12.930
Hello.

04:12.930 --> 04:20.770
Darth Vader because with default parameters it says if you're not able to get name and emoji because

04:20.920 --> 04:24.610
you are called without any arguments.

04:24.760 --> 04:30.640
Well in that case make default Darth Vader and make default emoji.

04:30.760 --> 04:44.490
This little emoji if I use lets say just one argument and I click run then well it will fill that need

04:44.490 --> 04:48.870
variable but anything that we don't give it like emoji will be pre defined.

04:49.290 --> 04:56.030
So this is a great way to make sure that your function runs even if it's called the wrong way.

04:56.100 --> 05:03.600
So keyword arguments increases the readability of your code because you know exactly how we're calling

05:03.600 --> 05:10.530
say hello and DFL parameters allow us to keep our functions a little bit more safe because we make sure

05:10.530 --> 05:17.550
that when we use a variable we're gonna have no matter what regardless of how it is being called but

05:17.550 --> 05:22.840
positional arguments are also useful because it's nice and clean right.

05:22.890 --> 05:26.060
We're just following what the function tells us to do.

05:26.340 --> 05:27.940
And it's easy to read.

05:28.170 --> 05:34.260
So there's pros and cons of using each but I hope this demonstrates to you some of the ways that you

05:34.260 --> 05:38.910
can define functions and also call functions.

05:38.910 --> 05:40.120
I'll see in the next one.

05:40.250 --> 05:40.430
Bob.
